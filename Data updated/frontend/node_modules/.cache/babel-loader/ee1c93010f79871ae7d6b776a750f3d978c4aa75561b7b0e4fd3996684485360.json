{"ast":null,"code":"var _jsxFileName = \"/home/muhammadhassanraza/Documents/data_scrap_front_end/Data_scraping_front_end/src/Component/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport exportFromJSON from \"export-from-json\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [userData, setUserData] = useState([]);\n  const [csvData, setCsvData] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [jobData, setJobData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    fetchDataa();\n    const intervalId = setInterval(() => {\n      setCurrentIndex(prevIndex => prevIndex + 1);\n    }, 5 * 1000); // 10-second interval\n\n    return () => clearInterval(intervalId);\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      const jsonData = await response.json();\n      setUserData(jsonData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const fetchDataa = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5003/latest_jobs\");\n      const data = await response.json();\n      setJobData(data);\n      const csvData = JSON.stringify(data, null, 2);\n      setCsvData(csvData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const downloadCSV = async () => {\n    try {\n      const formattedData = jobData.map(job => ({\n        Date: job.date,\n        \"File Name\": job.filename,\n        \"Company URL\": job.website\n      }));\n      const fileName = \"job_data\";\n      const exportType = exportFromJSON.types.csv;\n      exportFromJSON({\n        data: formattedData,\n        fileName,\n        exportType\n      });\n    } catch (error) {\n      console.error(\"Error fetching job data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), userData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jobData.length > 0 ? jobData.map((job, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.website\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadCSV,\n              className: \"btn\",\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No job data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Job Data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"a/ASKMFYw5UKz1N2q6ootggjV84=\");\n_c = Dashboard;\nexport default Dashboard;\n\n// last updated code\n// import React, { useEffect, useState } from \"react\";\n// import exportFromJSON from 'export-from-json';\n// import \"./Dashboard.css\";\n// import \"jspdf-autotable\";\n\n// const Dashboard = () => {\n//   const [userData, setUserData] = useState([]);\n//   const [csvData, setCsvData] = useState(\"\");\n//   const [currentIndex, setCurrentIndex] = useState(0);\n//   const [jobData, setJobData] = useState([]);\n\n//   useEffect(() => {\n//     fetchData();\n//     fetchDataa();\n\n//     const intervalId = setInterval(() => {\n//       setCurrentIndex((prevIndex) => prevIndex + 1);\n//     }, 5 * 1000); // 10-second interval\n\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\n//         \"https://jsonplaceholder.typicode.com/users\"\n//       );\n//       const jsonData = await response.json();\n//       setUserData(jsonData);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const fetchDataa = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5003/other_data\");\n//       const data = await response.json();\n//       setJobData(data);\n//       const csvData = JSON.stringify(data, null, 2);\n//       setCsvData(csvData);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const downloadCSV = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5003/latest_jobs\");\n//       const ldata = await response.json();\n//       let data = ldata.job_data;\n\n//       const fileName = 'download'\n//       const exportType =  exportFromJSON.types.csv\n\n//       exportFromJSON({ data, fileName, exportType })\n\n//     } catch (error) {\n//       console.error(\"Error fetching job data:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Dashboard</h1>\n//       {userData.length > 0 ? (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Date</th>\n//               <th>File Name</th>\n//               <th>Company URL</th>\n//               <th>Download</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {jobData && (\n//               <tr>\n//                 <td>{jobData.date}</td>\n//                 <td>{jobData.filename}</td>\n//                 <td>{jobData.website}</td>\n//                 <td>\n//                   <button onClick={downloadCSV} className=\"btn\">\n//                     Download\n//                   </button>\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p>Loading Job Data...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","exportFromJSON","jsxDEV","_jsxDEV","Dashboard","_s","userData","setUserData","csvData","setCsvData","currentIndex","setCurrentIndex","jobData","setJobData","fetchData","fetchDataa","intervalId","setInterval","prevIndex","clearInterval","response","fetch","jsonData","json","error","console","data","JSON","stringify","downloadCSV","formattedData","map","job","Date","date","filename","website","fileName","exportType","types","csv","className","children","_jsxFileName","lineNumber","columnNumber","length","index","onClick","colSpan","_c","$RefreshReg$"],"sources":["/home/muhammadhassanraza/Documents/data_scrap_front_end/Data_scraping_front_end/src/Component/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport exportFromJSON from \"export-from-json\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n  const [userData, setUserData] = useState([]);\n  const [csvData, setCsvData] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [jobData, setJobData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    fetchDataa();\n\n    const intervalId = setInterval(() => {\n      setCurrentIndex((prevIndex) => prevIndex + 1);\n    }, 5 * 1000); // 10-second interval\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n      const jsonData = await response.json();\n      setUserData(jsonData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const fetchDataa = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5003/latest_jobs\");\n      const data = await response.json();\n      setJobData(data);\n      const csvData = JSON.stringify(data, null, 2);\n      setCsvData(csvData);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const downloadCSV = async () => {\n    try {\n      const formattedData = jobData.map((job) => ({\n        Date: job.date,\n        \"File Name\": job.filename,\n        \"Company URL\": job.website,\n      }));\n\n      const fileName = \"job_data\";\n      const exportType = exportFromJSON.types.csv;\n\n      exportFromJSON({ data: formattedData, fileName, exportType });\n    } catch (error) {\n      console.error(\"Error fetching job data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Dashboard</h1>\n      {userData.length > 0 ? (\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>File Name</th>\n              <th>Company URL</th>\n              <th>Download</th>\n            </tr>\n          </thead>\n          <tbody>\n            {jobData.length > 0 ? (\n              jobData.map((job, index) => (\n                <tr key={index}>\n                  <td>{job.date}</td>\n                  <td>{job.filename}</td>\n                  <td>{job.website}</td>\n                  <td>\n                    <button onClick={downloadCSV} className=\"btn\">\n                      Download\n                    </button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"4\">No job data available</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      ) : (\n        <p>Loading Job Data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n// last updated code\n// import React, { useEffect, useState } from \"react\";\n// import exportFromJSON from 'export-from-json';\n// import \"./Dashboard.css\";\n// import \"jspdf-autotable\";\n\n// const Dashboard = () => {\n//   const [userData, setUserData] = useState([]);\n//   const [csvData, setCsvData] = useState(\"\");\n//   const [currentIndex, setCurrentIndex] = useState(0);\n//   const [jobData, setJobData] = useState([]);\n\n//   useEffect(() => {\n//     fetchData();\n//     fetchDataa();\n\n//     const intervalId = setInterval(() => {\n//       setCurrentIndex((prevIndex) => prevIndex + 1);\n//     }, 5 * 1000); // 10-second interval\n\n//     return () => clearInterval(intervalId);\n//   }, []);\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\n//         \"https://jsonplaceholder.typicode.com/users\"\n//       );\n//       const jsonData = await response.json();\n//       setUserData(jsonData);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const fetchDataa = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5003/other_data\");\n//       const data = await response.json();\n//       setJobData(data);\n//       const csvData = JSON.stringify(data, null, 2);\n//       setCsvData(csvData);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const downloadCSV = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5003/latest_jobs\");\n//       const ldata = await response.json();\n//       let data = ldata.job_data;\n\n//       const fileName = 'download'\n//       const exportType =  exportFromJSON.types.csv\n\n//       exportFromJSON({ data, fileName, exportType })\n\n\n//     } catch (error) {\n//       console.error(\"Error fetching job data:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard\">\n//       <h1>Dashboard</h1>\n//       {userData.length > 0 ? (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Date</th>\n//               <th>File Name</th>\n//               <th>Company URL</th>\n//               <th>Download</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {jobData && (\n//               <tr>\n//                 <td>{jobData.date}</td>\n//                 <td>{jobData.filename}</td>\n//                 <td>{jobData.website}</td>\n//                 <td>\n//                   <button onClick={downloadCSV} className=\"btn\">\n//                     Download\n//                   </button>\n//                 </td>\n//               </tr>\n//             )}\n//           </tbody>\n//         </table>\n//       ) : (\n//         <p>Loading Job Data...</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n"],"mappings":"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AAM,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAER1C,OAAA;MAAAuC,QAAA,EAAG;IAAmB;MAAAL,QAAA,EAAAM,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAR,QAAA,EAAAM,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CAjGID,SAAS;AAAA8C,EAAA,GAAT9C,SAAS;AAmGf,eAAeA,SAAS;;AAGxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}